LIBS = support irreader ipo bitwriter bitreader
CONFIG = llvm-config
CXX    = clang++
CC     = clang
OPT_LEVEL = O3
LDFLAGS = $(shell $(CONFIG) --ldflags --system-libs --libs $(LIBS) | sed 's/-DNDEBUG//g')
CXXFLAGS = $(shell $(CONFIG) --cxxflags | sed -e 's/-DNDEBUG//g' -e 's/-O3//g') -$(OPT_LEVEL) -g
CCFLAGS = $(shell $(CONFIG) --cflags | sed -e 's/-DNDEBUG//g' -e 's/-O3//g') -$(OPT_LEVEL) -g
SRC_DIR := src
BIN_DIR := bin
OBJ_DIR := obj
TOOLS := create-policy extract-loops instrument-loops instrument-invos create-server reorder-functions
LIBS2 := extract
SRCS := $(wildcard $(SRC_DIR)/*.cpp)
TOOL_SRCS := $(TOOLS:%=$(SRC_DIR)/%.cpp)
LIB_SRCS := $(filter-out $(TOOL_SRCS),$(SRCS))
BC_OBJS := $(LIB_SRCS:$(SRC_DIR)/%.cpp=%.bc)

EXES := $(TOOLS:%=$(BIN_DIR)/%)
# prof.bc is the profiler runtime, don't link it into libextract
LIB_BCS := $(filter-out prof.bc,$(BC_OBJS))
OBJS := $(LIB_BCS:%.bc=$(OBJ_DIR)/%.o)

.PHONY: all clean build_obj build_libs build_exe
.PRECIOUS: %.o %.bc %.a

all: build_obj build_libs build_exe

# Separate dependences on header files so they are not added to compile cmd
HEADERS = $(wildcard SRC_DIR/*.h)
$(BC_OBJS) $(OBJS): $(HEADERS)

build_exe:
	mkdir -p $(BIN_DIR) 
	$(MAKE) $(EXES)

build_obj:
	mkdir -p $(OBJ_DIR)
	$(MAKE) $(OBJS) $(BC_OBJS)

build_libs:
	mkdir -p $(OBJ_DIR)
	$(MAKE) $(LIBS2:%=$(OBJ_DIR)/lib%.a) $(LIBS2:%=$(OBJ_DIR)/lib%.so)

obj/%.bc: $(SRC_DIR)/%.cpp
	$(CXX) $< $(CXXFLAGS) -c -emit-llvm
	mv -f $(@F) obj/

obj/%.bc: $(SRC_DIR)/%.c
	$(CC) $< -O0 -c -emit-llvm
	mv -f $(@F) obj/

obj/%.o: $(SRC_DIR)/%.cpp
	$(CXX) $< $(CXXFLAGS) -c -o $@

obj/%.o: $(SRC_DIR)/%.c
	$(CC) $< $(CCFLAGS) -c -o $@

obj/%.a: $(OBJS)
	$(AR) rv $@ $^

obj/%.so: $(OBJS)
	$(CXX) $^ -shared $(shell $(CONFIG) --ldflags) -o $@

bin/%: obj/%.o $(LIBS2:%=obj/lib%.a)
	$(CXX) $^ $(LDFLAGS) -o $@

clean:
	rm -rf *.o $(EXES) $(OBJS) $(LIBS2:%=$(OBJ_DIR)/lib%.a)
